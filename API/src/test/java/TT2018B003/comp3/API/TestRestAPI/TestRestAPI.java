package TT2018B003.comp3.API.TestRestAPI;

import org.springframework.web.client.RestTemplate;
import TT2018B003.comp3.API.Domain.WinnowingModelTest;

public class TestRestAPI {
	
	public static void main(String[] args) {
		RestTemplate restTemplate = new RestTemplate();
		String url = "http://localhost:8083/API/v1/winnowing";

		WinnowingModelTest data = new WinnowingModelTest();
		data.setChaffing("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");
		data.setPattern("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");
		
		String a = restTemplate.postForObject(url, data, String.class);
		System.out.println(a);
		
		/*user.setEmail("admin@gmail.com");
		user.setFirstName("admin");
		user.setLastName("admin");
		user.setCreatedBy("admin");
		user.setUpdatedBy("admin");
		ResponseEntity<User> postResponse = restTemplate.postForEntity(getRootUrl() + "/users", user, User.class);
		Assert.assertNotNull(postResponse);
		Assert.assertNotNull(postResponse.getBody());
		*/
		
		
	}
}
