package TT2018B003.comp3.API.TestCrypto;

import org.junit.Assert;
import org.junit.Ignore;
import org.junit.Test;
import org.junit.runner.RunWith;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.boot.test.context.SpringBootTest;
import org.springframework.test.context.junit4.SpringJUnit4ClassRunner;

import TT2018B003.comp3.API.Service.CryptoService;

@RunWith(SpringJUnit4ClassRunner.class)
@SpringBootTest
public class CryptoServiceTest {

	@Autowired
	CryptoService cryptoService;

	@Test
	@Ignore
	public void decryptTest() {
		String encryptedMessage = "vjPb9kR2lz0/EF0Fp09fQoG+lfJsWXOAnQ+31YE2niSB+e1xijfTFxb2gCUNGHI3vqRe3hd2lK0qyEz9sjlG6dSSEZBHhvhb+ZZmqKRGhDzKa1wf/QF/yTifX0v+AQ4Ba9Fl64c32pmN1xfkSTwe4+vtrD7FAHf7E/PALT2jJn3ipPskCVAn49PbDtSRZbBsqy5b1lWo1yMDLyDVBqqavhmCezfOarEyslLzan4SEZU6DBmHoxEIarL6ybxdqAtdlATB1SzLR5DlE0JTRHLl7lkUlWGa7rDRKBVR2E6iN+wi6zA9b4hfNgM8i+x+xCsN0r/gSPctNbW296WItLh2gg==";
		String decryptedMessage = cryptoService.decryptPattern(encryptedMessage);

		Assert.assertEquals("zapatito12345678", decryptedMessage);
	}

	@Test
	public void decryptPattern() {

		//String original = "tttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttt";
		String original = "";
		for(int i = 0; i < 186; i++)
			original += (char) 0;
		
		String encryptedPattern = "cPYBLx7PX4QQufWMW8K9qD8cdmG03vH8fW5Fa234HaFdXqLhVXe514mYfHZe41yzKvxc4eAs1LliJ7DwRBgHSEWYsKhDCUZ5jNxthUNjO0SyOigq+z9H2slpA+AdrEggh70Usg82sE0DVQjjn1AsufvwC4Rotqx77lj6h8vEAwQ8M01z95SC2SxJGhc6N290inT7BwEkwrtwgT4s+PJVCxYuqZQCwfbcD1VmkGyG9TjSgjx8rQ831nwkevCKraKUotaxLsk7QMDn0fJyuIOWVvTE0Hpt3eblNVX4Tiwjy296XDMh1V9fpyQEHRspry07QQENCetY7JbKfUVfuNM5KQ==";
		//String encryptedPattern1 = "eBtWqfFzoX0SrUufNeu53l+HvSUSm3i1UeVg3ffM8bC2dsxn0QdfUFcTegojABn13vb3Cc1nS/DJeZ9BGVStY6DxR+fmkKjWutyp4XFuBVjJXs59CoKtfvu7NA3vpy8Wf4Oo6/ssYAR2AxtCvjVTJStwwdLGXb0H9XGQtLHMuHuxM2Wdc1bRw8z6xgcuxOBtljXNbCwVz6E9rOSjvTgLWHCLTTGnSwDMfPwRVmo9kT8Z2uwIsC/Ria1B1YMNPRo5OTwC/p8HfduddCeDb8x9ckEXZgEF1/3fPmY18KkqL3ySPQuryHVHOzK4qYsHu+mSBbOP68Z/DCMwoByY7nLUdw==";
		//String encryptedPattern2 = "KaLey1Mku35Xb8tb522vBx38xgx880lBk2xkizdxVS9maxJcGbL1+zvDNCKb0sH5QYvUuyB89EsF3LYOZsS5CcMrzE2/ju7fP2/9yfG0nSNoAIrJ9hZzYOOidRGCwn5FPPcH3thDbk3q4wlVtQucQR0X8Ojx+y4gd/KvgTtFcFXMCHBvCq7oDT3ztSjDMzjlf4nItB5RLBMVJArRNyNk/9qP7ucqx8NYNYco2AAXKpBDkN3B+s9SK50jSOqeGoavNc2Ejz2hkYdlWlkUT36kdytzzY04P2Ed2YWy0iSwPHRiXEz/FtydxT94T5QU3LEbxgyObMqtjKSXsteGk/6IOw==";
		//String encryptedPattern3 = "JjrSTPfDU5QlyTbY0p/2BGkrqp1iD1iD1a2FLpO1F17dkMyuamjFmMnkIJHRQYPPv9ahh1OYkcfdxm30fWaEia6jBoXRtVnaDWyoe5fEE41JwogrPgN33SOUG7F+tdmPsvJg044RnN7XTCmVbnC8nGnCBwgOFEGA1Gq5rm7jCZnO0NJ+s/dkKECuywg+Q4mGV9xNqnyresPYSira+RyaFs8Eii6fltfkeDSBFbnu6GaU/9CstNT2GMPXvmnnEnmSMxGPF5DD9q2FnZAh1JGi/ZgnN1oXAnBsKuU38BQpiy2DFlfDZbohU9W+NaOuuNPX//9UgkLxRi//oke5XA8jOg==";
		//String encryptedPattern4 = "cIvQQEf7vErqHQ9Sb4IVL6iMUhj26Dvemgf4cQ601j2A8hj+UfjMDPEiy05DEKscyG/THqVF0/pNg/lg7GLb/R16YnQggPX4KoPvLLs+EyTALm7GBYfq7BCINGBZ23V48jjI0VolXlywa9UgA5M73xLpACSGpnerE3aq8c1lBCY/KQR/fDnUpxlVgchOYBoAgAsy26n6dh9Pa1CgeEJHBUk6YjWtLEdPCgD6qScjbkCH8SmUteE3GiK1tqOLFSuVKGlgfYkG0yrcz1Cgtjd6LTQVUPVBQFZtBt5lErVCKonzBwXhWX7KiicHhbZnpaossWrSbrz/RNbeRHYeiDh9NQ==";
		
		String pattern = cryptoService.decryptPattern(encryptedPattern);
		//String pattern1 = cryptoService.decryptPattern(encryptedPattern1);
		//String pattern2 = cryptoService.decryptPattern(encryptedPattern2);
		//String pattern3 = cryptoService.decryptPattern(encryptedPattern3);
		//String pattern4 = cryptoService.decryptPattern(encryptedPattern4);
		
		
		//System.out.println(pattern);
		Assert.assertEquals(original, pattern);
		//Assert.assertEquals(original, pattern1);
		//Assert.assertEquals(original, pattern2);
		//Assert.assertEquals(original, pattern3);
		//Assert.assertEquals(original, pattern4);
	}

	@Test
	@Ignore
	public void doShaTest() {
		String message = "MIIFnDCCBISgAwIBAgIUEpexe331o4hlTIhkyZ7pbX02rqcwDQYJKoZIhvcNAQELBQAwggELMQswCQYDVQQGEwJNWDEZMBcGA1UECAwQQ2l1ZGFkIGRlIE1leGljbzEZMBcGA1UEBwwQR3VzdGF2byBBLk1hZGVybzEOMAwGA1UEEQwFMDc2MDAxLDAqBgNVBAkMI0NhbGxlIDQgTm8uMTIgQ29sLlByb2dyZXNvIE5hY2lvbmFsMRMwEQYDVQQKDApJbmRlZmluaWRvMRMwEQYDVQQLDApJbmRlZmluaWRvMRcwFQYDVQQDDA5pbmRlZmluaWRvLmNvbTEbMBkGA1UEAwwSd3d3LmluZGVmaW5pZG8uY29tMSgwJgYJKoZIhvcNAQkBFhlkaWVnb2FydHVybzIxMjFAZ21haWwuY29tMB4XDTE5MTAwMzA0MDQ0OFoXDTIwMTAwMjA0MDQ0OFowggELMQswCQYDVQQGEwJNWDEZMBcGA1UECAwQQ2l1ZGFkIGRlIE1leGljbzEZMBcGA1UEBwwQR3VzdGF2byBBLk1hZGVybzEOMAwGA1UEEQwFMDc2MDAxLDAqBgNVBAkMI0NhbGxlIDQgTm8uMTIgQ29sLlByb2dyZXNvIE5hY2lvbmFsMRMwEQYDVQQKDApJbmRlZmluaWRvMRMwEQYDVQQLDApJbmRlZmluaWRvMRcwFQYDVQQDDA5pbmRlZmluaWRvLmNvbTEbMBkGA1UEAwwSd3d3LmluZGVmaW5pZG8uY29tMSgwJgYJKoZIhvcNAQkBFhlkaWVnb2FydHVybzIxMjFAZ21haWwuY29tMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAqAXrx5M+c1LP62aXEIJrq9WSlrRb0hb6iE9kHoGQMEyX9kdDAQsvjcHW1JkNMBb15aFukwpgJpgFIBtSknlspOi3gg0HWub9DxI2BMCFRJL214MJEoU99mul7CGGGN8l7WpDAL3hKSkTQo7GmtMKs0RxUtJUAicrF4CuBEm8x16V9uCxB+12c4wKIULeanfdWBc4Vty0DzBle+uzeyCofjJ+/jq/kwtI33NSIvsxNKMa1YrdYs/ThwbL9IrmuLgMKc/VJ5r8LPOTrad1jKl+prIGbd7CBRWmkPrUiJVa5PmEMWvTOKraAz2bakMbfm5Hz/ESKWwVq+10YNEJxK+WhQIDAQABo4HzMIHwMB0GA1UdDgQWBBS3cixDjZSxB0ZYx0EAAX4U5ymgTDAfBgNVHSMEGDAWgBS3cixDjZSxB0ZYx0EAAX4U5ymgTDARBggrBgEFBQcBGAQFMAMCAQUwEgYDVR0TAQH/BAgwBgEB/wIBATAOBgNVHQ8BAf8EBAMCBaAwSAYDVR0lAQH/BD4wPAYIKwYBBQUHAwEGCCsGAQUFBwMCBggrBgEFBQcDEQYIKwYBBQUHAwcGCCsGAQUFBwMGBggrBgEFBQcDBTAtBgNVHREEJjAkgg5pbmRlZmluaWRvLmNvbYISd3d3LmluZGVmaW5pZG8uY29tMA0GCSqGSIb3DQEBCwUAA4IBAQB+K5I63vEOhRsZS1s1pvjdlttvzomzz4rh0FY+iPE6DGTSoPmHXPqta2YpszXoagGFQ0+gOD3fOuiKm4sEfvFxkRfSSFoWrtW0ujUguLTpa0z/D1p4WoNNeGkRruxFiSHERHW6TbauH8csWTGsQoKG6pzdfYZWxcTyu5jHxW1IDDFE1LCDprhHLEY6S0hwMN3hFF0meRKa0NFxFgx8T2THVOGNyWwJS83fpndhvpcuUg6AVTI22fxERW6EqCO5mZh2iFcartBhGoi8grovzNbm+4/ikCL2AGXaDnrw8w8xqT8DeAEIyEBQcfRp3j3UIuKwE28QH18DmgdXgjLGv6qm";
		String sha = cryptoService.doSHA(message);

		Assert.assertEquals("56b1a090cc4216d9c064d41e18865737a9a2d5567a9eee097d534cc5e566c90f", sha);
	}

	@Test
	@Ignore
	public void verifyCertificateTest() {
		String valid_cert = "MIIFQjCCBCqgAwIBAgIUVi54SPKsSnrF9duWR5zrLTwc0jcwDQYJKoZIhvcNAQELBQAwgekxCzAJBgNVBAYTAk1YMRIwEAYDVQQIDAlNw4PCqXhpY28xIDAeBgNVBAcMF0F0aXphcMODwqFuIGRlIFphcmFnb3phMQ4wDAYDVQQRDAU1MjkyODEqMCgGA1UECQwhQ2hhYmFjYW5vIDQgUHJhZG9zIGRlIEl4dGFjYWxhIElJMQ0wCwYDVQQKDARudWxsMQ0wCwYDVQQLDARudWxsMQ0wCwYDVQQDDARudWxsMREwDwYDVQQDDAh3d3cubnVsbDEoMCYGCSqGSIb3DQEJARYZZGllZ29hcnR1cm8yMTIxQGdtYWlsLmNvbTAeFw0xOTEwMDcwNDE5NDhaFw0yMDEwMDYwNDE5NDhaMIHpMQswCQYDVQQGEwJNWDESMBAGA1UECAwJTcODwql4aWNvMSAwHgYDVQQHDBdBdGl6YXDDg8KhbiBkZSBaYXJhZ296YTEOMAwGA1UEEQwFNTI5MjgxKjAoBgNVBAkMIUNoYWJhY2FubyA0IFByYWRvcyBkZSBJeHRhY2FsYSBJSTENMAsGA1UECgwEbnVsbDENMAsGA1UECwwEbnVsbDENMAsGA1UEAwwEbnVsbDERMA8GA1UEAwwId3d3Lm51bGwxKDAmBgkqhkiG9w0BCQEWGWRpZWdvYXJ0dXJvMjEyMUBnbWFpbC5jb20wggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQCoBevHkz5zUs/rZpcQgmur1ZKWtFvSFvqIT2QegZAwTJf2R0MBCy+NwdbUmQ0wFvXloW6TCmAmmAUgG1KSeWyk6LeCDQda5v0PEjYEwIVEkvbXgwkShT32a6XsIYYY3yXtakMAveEpKRNCjsaa0wqzRHFS0lQCJysXgK4ESbzHXpX24LEH7XZzjAohQt5qd91YFzhW3LQPMGV767N7IKh+Mn7+Or+TC0jfc1Ii+zE0oxrVit1iz9OHBsv0iua4uAwpz9Unmvws85Otp3WMqX6msgZt3sIFFaaQ+tSIlVrk+YQxa9M4qtoDPZtqQxt+bkfP8RIpbBWr7XRg0QnEr5aFAgMBAAGjgd8wgdwwHQYDVR0OBBYEFLdyLEONlLEHRljHQQABfhTnKaBMMB8GA1UdIwQYMBaAFLdyLEONlLEHRljHQQABfhTnKaBMMBEGCCsGAQUFBwEYBAUwAwIBBTASBgNVHRMBAf8ECDAGAQH/AgEBMA4GA1UdDwEB/wQEAwIFoDBIBgNVHSUBAf8EPjA8BggrBgEFBQcDAQYIKwYBBQUHAwIGCCsGAQUFBwMRBggrBgEFBQcDBwYIKwYBBQUHAwYGCCsGAQUFBwMFMBkGA1UdEQQSMBCCBG51bGyCCHd3dy5udWxsMA0GCSqGSIb3DQEBCwUAA4IBAQBqnZpJAefi7dSLTg6no2ukRRT+IzK/HzXC02PBngwlLf+a6VkFyN1P1FLz/wO44WVugzbQWjEGuixzQOoHz8uZJG91xy3QvXMmt59mgRrWw87tEu/QiZ6skO1m5ElIzlkR3SniegH0vUjEUxkY7TQrqQN6/HfotFeFWJnukha6OVhO26vHAsIGLnVItD9bbhOShB1QmVuHaeqO+y8avvx+nN99cHCIbfmA8zTGcZmvFiMcdONrtktF/cRd72f/sLoK9lEWvMOQWVQSva1vObJjmm6aKfl+y2+WgszULLFSNFPji13BSx//zt9nnRAlcfxtA8goMI9aILwrwM4wBEDr";
		String invalid_cert = "MIIECjCCAvKgAwIBAgIJANn5kgA3YrkfMA0GCSqGSIb3DQEBCwUAMIGZMQswCQYDVQQGEwJNWDENMAsGA1UECAwEQ0RNWDESMBAGA1UEBwwJQ1VBSFRFTU9TMQ4wDAYDVQQKDAVFU0NPTTEjMCEGA1UECwwaWUFEQUpBTUVDUkVBUk1JQ0VSVElGSUNBRE8xEDAOBgNVBAMMB2FzZGZhc2YxIDAeBgkqhkiG9w0BCQEWEWJhYXNvZGZAZ21haWwuY29tMB4XDTE5MDgxMTAyMzcwNFoXDTIwMDgxMDAyMzcwNFowgZkxCzAJBgNVBAYTAk1YMQ0wCwYDVQQIDARDRE1YMRIwEAYDVQQHDAlDVUFIVEVNT1MxDjAMBgNVBAoMBUVTQ09NMSMwIQYDVQQLDBpZQURBSkFNRUNSRUFSTUlDRVJUSUZJQ0FETzEQMA4GA1UEAwwHYXNkZmFzZjEgMB4GCSqGSIb3DQEJARYRYmFhc29kZkBnbWFpbC5jb20wggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQCdUlmf1FnScEK+GQdXI4NEQaVU2Z5SFMOY+hnvFgFCRDFcNQBVJca2l4WO835k9ojUpKf3JjPSVGLk6kMUzTRcGaSTqju9HJ/y6vuNbuYLWACC4fRYf3Q18DNRFlvlYd6LQiwQqBd6m6R0C7mH4WK1G1ZkPFjEQ+yj1oN3KtktUVjfCEz1QTjeKEccLeNTAXYWAgYULJEHXouvGnvkS7lT4H4cuQx7RLnXy1PqwByVmnQyYBE0X3T/gZMbXR/jXr4ak7mGh+Z0Vsj3dO3y90ME/swS5Ho7XHs2Fm+Bx64rrq9iJFeWJ1HHX4Wm2bQUWE1ezmK7HycFVYvR0AdOz8W7AgMBAAGjUzBRMB0GA1UdDgQWBBSJqUEy0gEDtvbZXb1yLk8jZDdVTzAfBgNVHSMEGDAWgBSJqUEy0gEDtvbZXb1yLk8jZDdVTzAPBgNVHRMBAf8EBTADAQH/MA0GCSqGSIb3DQEBCwUAA4IBAQBYSDRdD9zr10IyqYnPpoV3CfX2DcVKMVEwfjj1uxq81aTEjulKp3bBL49NMsEqvAM9YYk9yAbNMQbm5cnrtf1oK8uAHSsRiy0XJcw5ZHVlAc/kZijBJajSuTK/xwiftMKK0MZEG6amK/hlxYct8cBf0IDwHUW5caKWVYZhaww6NMeFo6l2NemmOC0UBds7qs7B++CxglonaXDu29a2IjnveAa/UJjA+Sm+ZP4WfPe6LZ2sJ+8YRP6DBRHMGEYUehR3/XNUcjC3vsy0lAOaygiYzEx/dDXTiD6y9QnWkuOg/NEjU7pdOig3eOZzVat3P9a+9T0MsvkSLwCsRqtEs0Xw";
		String bad = "hola";

		String correct_valid_cert = getCert(valid_cert);
		String correct_invalid_cert = getCert(invalid_cert);

		int rtn_valid = cryptoService.verifyCertificate(correct_valid_cert);
		int rtn_invalid = cryptoService.verifyCertificate(correct_invalid_cert);
		int rtn_bad = cryptoService.verifyCertificate(bad);

		Assert.assertEquals(1, rtn_valid);
		Assert.assertEquals(0, rtn_invalid);
		Assert.assertEquals(-1, rtn_bad);

	}

	private static String getCert(String cert) {
		return "-----BEGIN CERTIFICATE-----\r\n" + cert + "\r\n" + "-----END CERTIFICATE-----\r\n";
	}

}
